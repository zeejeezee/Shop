<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="adminMapper">
 	<resultMap type="kh.study.shop.item.vo.ItemVO" id="item">
		<id column="ITEM_CODE" property="itemCode"/>
		<result column="ITEM_NAME" property="itemName"/>
		<result column="ITEM_PRICE" property="itemPrice"/>
		<result column="ITEM_COMMENT" property="itemComment"/>
		<result column="REG_DATE" property="regDate"/>
		<result column="ITEM_STOCK" property="itemStock"/>
		<result column="CATE_CODE" property="cateCode"/>
		<result column="ITEM_STATUS" property="itemStatus"/>
	</resultMap>
	
	<resultMap type="kh.study.shop.item.vo.CategoryVO" id="category">
		<id column="CATE_CODE" property="cateCode"/>
		<result column="CATE_NAME" property="cateName"/>
		<result column="CATE_STATUS" property="cateStatus"/>
	</resultMap>
	
	
	<insert id="insertCategory"><!-- categoryVO.setCateCode("CATE_001"); -->
		<selectKey resultType="String" keyProperty="cateCode" order="BEFORE">
			SELECT 'CATE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(CATE_CODE, 6))), 0) + 1, 3, 0)
			FROM ITEM_CATEGORY
		</selectKey>
		
		INSERT INTO ITEM_CATEGORY (
			CATE_CODE
			, CATE_NAME
		) VALUES (
			#{cateCode}
			, #{cateName}
		)
	</insert>
	
	
	<select id="selectCategoryListAll" resultMap="category">
		SELECT CATE_CODE
			, CATE_NAME
			, CATE_STATUS
		FROM ITEM_CATEGORY
		ORDER BY CATE_CODE
	</select>
	
	
	<select id="selectCategoryListInUse" resultMap="category">
		SELECT CATE_CODE
			, CATE_NAME
			, CATE_STATUS
		FROM ITEM_CATEGORY
		WHERE CATE_STATUS = 'USE'
		ORDER BY CATE_CODE
	</select>
	
	
	<update id="updateStatus">
		UPDATE ITEM_CATEGORY
		SET	CATE_STATUS = #{cateStatus}
		WHERE CATE_CODE = #{cateCode}
	</update>


	<select id="getNextItemCode" resultType="String">
		SELECT 'ITEM_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(ITEM_CODE, 6))), 0) + 1, 3, 0)
		FROM SHOP_ITEM
	</select>
	
	
	<insert id="regItem">
		INSERT INTO SHOP_ITEM (
			ITEM_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, ITEM_STOCK
			, ITEM_COMMENT
			, CATE_CODE
		) VALUES (
			#{itemCode}
			, #{itemName}
			, #{itemPrice}
			, #{itemStock}
			, #{itemComment}
			, #{cateCode}
		)
	</insert>
	
	
	<select id="selectItemList" resultMap="item">
		SELECT ITEM_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, ITEM_COMMENT
			, TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE
			, ITEM_STOCK
			, CATE_CODE
		FROM SHOP_ITEM
		ORDER BY ITEM_CODE
	</select>
	
	
	<select id="selectMemberList" resultMap="memberMapper.member">
		SELECT MEMBER_ID
			, MEMBER_NAME
			, DECODE(MEMBER_ROLE, 'MEMBER', '일반회원', 'ADMIN', '관리자') AS MEMBER_ROLE
		FROM SHOP_MEMBER
		ORDER BY MEMBER_ROLE, MEMBER_ID
	</select>


	<select id="selectMemberDetail" resultMap="memberMapper.member">
		SELECT MEMBER_ID
			, MEMBER_PW
			, MEMBER_NAME
			, MEMBER_ADDR||' ' ||ADDR_DETAIL as MEMBER_ADDR
			, MEMBER_EMAIL
			, DECODE(MEMBER_ROLE, 'ADMIN', '관리자', '일반회원') AS MEMBER_ROLE
			, DECODE(MEMBER_STATUS, 'ACTIVE', '활동중', '휴면계정') AS MEMBER_STATUS
		FROM SHOP_MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	
	<select id="getItemListForAdmin" resultMap="itemMapper.item">
		SELECT ITEM_CODE
			, ITEM_NAME
			, ITEM_PRICE
			, TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS REG_DATE
			, ITEM_STOCK
			, ITEM_STATUS
			, CATE_NAME
		FROM SHOP_ITEM I, ITEM_CATEGORY C
		WHERE I.CATE_CODE = C.CATE_CODE
  		<if test="cateCode != null and !cateCode.equals('')"> <!-- cateCode가 빈 문자열이 아니면 -->
		AND I.CATE_CODE = #{cateCode}
		</if>
		
		<if test="itemName != null and !itemName.equals('')">
		AND UPPER(ITEM_NAME) LIKE UPPER('%'||#{itemName}||'%')
		</if>
		
		<if test="itemStock != null and !itemStock.equals('')">
		AND ITEM_STOCK &lt;= #{itemStock}
		</if>
		
		<!-- search를 클릭할 때는 기본값이 있기 때문에 조건이 없어도 되지만
		메뉴 탭에서 상품관리를 클릭해서 페이지에 들어갈 때는 값이 null이기 때문에
		조건을 넣어 줘야 한다  -->
		<if test="fromDate != null and !fromDate.equals('')">
 		AND TO_CHAR(REG_DATE, 'YYYY-MM-DD') &gt;= #{fromDate}
		</if>
		
		<if test="toDate != null and !toDate.equals('')">
		AND TO_CHAR(REG_DATE, 'YYYY-MM-DD') &lt;= #{toDate}
		</if>
						
		<if test="itemStatus != null and !itemStatus.equals('')">
		AND ITEM_STATUS = #{itemStatus}
		</if>
	</select>
	
	<!-- 재고 변경 -->
	<update id="updateStock">
		UPDATE SHOP_ITEM
		SET
		ITEM_STOCK = #{itemStock}
		WHERE ITEM_CODE = #{itemCode} 
	</update>
	
	<!-- 상품 상태 변경 -->
	<update id="updateItemStatus">
		UPDATE SHOP_ITEM
		SET	ITEM_STATUS = #{itemStatus}
		WHERE ITEM_CODE = #{itemCode}
	</update>
	
	<!-- 상품 이미지 등록 -->
 	<insert id="insertImgs">
		INSERT INTO ITEM_IMG (
			IMG_CODE
			, ORIGIN_NAME
			, ATTACHED_NAME
			, IS_MAIN
			, ITEM_CODE
		)			<!-- itemVO.getImgList(); -->
		<foreach collection="imgList" item="img" separator="UNION ALL" index="i"> <!-- 이미지가 여러개 등록되기 때문에 forEach문 사용 -->
			SELECT (SELECT 'IMG_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(IMG_CODE, 5))), 0) + 1 + #{i} , 3, 0)
					FROM ITEM_IMG)
				, #{img.originName}
				, #{img.attachedName}
				, #{img.isMain}
				, #{img.itemCode}
			FROM DUAL
		</foreach>		
	</insert>
	

</mapper>